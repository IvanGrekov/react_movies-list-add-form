{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlChecking","NewMovie","state","validation","titleError","imgUrlError","imdbUrlError","imdbIdError","urlValidation","handleValue","event","target","name","value","setState","match","handleSubmit","isImgUrlValid","isImdbUrl","newMovie","props","onAdd","checkingError","parameter","checkingUrlError","findSomeError","Object","values","some","error","this","onSubmit","preventDefault","classNames","form__input_invalid","type","placeholder","onChange","rows","disabled","PureComponent","App","moviesFromServer","addMovie","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.529a96b1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst urlChecking = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends PureComponent {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    validation: {\n      titleError: false,\n      imgUrlError: false,\n      imdbUrlError: false,\n      imdbIdError: false,\n    },\n    urlValidation: {\n      imgUrlError: false,\n      imdbUrlError: false,\n    },\n  };\n\n  handleValue = (event) => {\n    const { name, value } = event.target;\n\n    if ((name === 'imgUrl' || name === 'imdbUrl') && value === '') {\n      return this.setState(state => ({\n        [name]: value,\n        validation: {\n          ...state.validation,\n          [`${name}Error`]: false,\n        },\n        urlValidation: {\n          ...state.urlValidation,\n          [`${name}Error`]: false,\n        },\n      }));\n    }\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      return this.setState(state => ({\n        [name]: value,\n        validation: {\n          ...state.validation,\n          [`${name}Error`]: false,\n        },\n        urlValidation: {\n          ...state.urlValidation,\n          [`${name}Error`]: !value.match(urlChecking),\n        },\n      }));\n    }\n\n    return this.setState(state => ({\n      [name]: value,\n      validation: {\n        ...state.validation,\n        [`${name}Error`]: false,\n      },\n    }));\n  };\n\n  handleSubmit = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      return this.setState({\n        validation: {\n          titleError: !title,\n          imgUrlError: !imgUrl,\n          imdbUrlError: !imdbUrl,\n          imdbIdError: !imdbId,\n        },\n      });\n    }\n\n    const isImgUrlValid = !!imgUrl.match(urlChecking);\n    const isImdbUrl = !!imdbUrl.match(urlChecking);\n\n    if (!isImgUrlValid || !isImdbUrl) {\n      return this.setState({\n        urlValidation: {\n          imgUrlError: !isImgUrlValid,\n          imdbUrlError: !isImdbUrl,\n        },\n      });\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    return this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      validation: {\n        titleError: false,\n        imgUrlError: false,\n        imdbUrlError: false,\n        imdbIdError: false,\n      },\n      urlValidation: {\n        imgUrlError: false,\n        imdbUrlError: false,\n      },\n    });\n  }\n\n  checkingError = parameter => this.state.validation[`${parameter}Error`];\n\n  checkingUrlError = parameter => this.state.urlValidation[`${parameter}Error`];\n\n  findSomeError = () => (\n    Object.values(this.state.validation).some(error => error)\n  );\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.handleSubmit();\n        }}\n      >\n        <div className=\"form__input-wrapper\">\n          <input\n            className={classNames(\n              'form__input',\n              { form__input_invalid: this.checkingError('title') },\n            )}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title of Movie\"\n            value={title}\n            onChange={(event) => {\n              this.handleValue(event);\n            }}\n          />\n          {this.checkingError('title') && (\n            <span className=\"form__error\">\n              Enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className={classNames(\n              'form__input',\n              { form__input_invalid:\n                  this.checkingError('imgUrl')\n                  || this.checkingUrlError('imgUrl') },\n            )}\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"Image URL\"\n            value={imgUrl}\n            onChange={(event) => {\n              this.handleValue(event);\n            }}\n          />\n          {this.checkingError('imgUrl') && (\n            <span className=\"form__error\">\n              Enter an image URL\n            </span>\n          )}\n          {this.checkingUrlError('imgUrl') && (\n            <span className=\"form__error\">\n              Enter a valid image URL\n            </span>\n          )}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className={classNames(\n              'form__input',\n              { form__input_invalid:\n                  this.checkingError('imdbUrl')\n                  || this.checkingUrlError('imdbUrl') },\n            )}\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"IMDb URL\"\n            value={imdbUrl}\n            onChange={(event) => {\n              this.handleValue(event);\n            }}\n          />\n          {this.checkingError('imdbUrl') && (\n            <span className=\"form__error\">\n              Enter an IMDb URL\n            </span>\n          )}\n          {this.checkingUrlError('imdbUrl') && (\n            <span className=\"form__error\">\n              Enter a valid IMDb URL\n            </span>\n          )}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className={classNames(\n              'form__input',\n              { form__input_invalid: this.checkingError('imdbId') },\n            )}\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"IMDb ID\"\n            value={imdbId}\n            onChange={(event) => {\n              this.handleValue(event);\n            }}\n          />\n          {this.checkingError('imdbId') && (\n            <span className=\"form__error\">\n              Enter an IMDb ID\n            </span>\n          )}\n        </div>\n\n        <textarea\n          className=\"form__input form__input_textarea\"\n          rows=\"6\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description of movie\"\n          value={description}\n          onChange={(event) => {\n            this.handleValue(event);\n          }}\n        />\n\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={this.findSomeError()}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}